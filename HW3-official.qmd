---
title: "HW 3"
author: "Emma Bea Mitchell"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
# load libraries
library(tidyverse)
library(here)
library(janitor)
```

```{r}
# load fonts

library(showtext)

# can't find some of the fonts so willl add in affinity

#font_add_google(name = "Rubik Puddles", family = "puddles")
#font_add_google(name = "Rubik Glitch", family = "glitch")
font_add_google(name = "Flavors", family = "flavors")
#font_add_google(name = "DynaPuff", family = "dynapuff")
#font_add_google(name = "Rubik Vinyl", family = "vinyl")
font_add_google(name = "Outfit", family = "outfit")

showtext_auto()
```


```{r}
# load data
fish_02_24 <- read_csv(here("data", "2002-2024_DJFMP_trawl_fish_and_water_quality_data.csv"))
locals <- read_csv(here("data", "DJFMP_Site_Locations.csv"))
```


```{r}
# load previously cleaned data from HW 2
fish_clean <- fish_02_24 |> 
  clean_names() |> 
  select_if(~ sum(is.na(.)) < 750000)
```


1. I plan to pursue option 1

2. My questions have changed. They are now:

Overarching questions: 
Have fish/organism catches at each site changed over time?

Sub-questions: 
What is the most caught organism at each site over time?
What is the amount of unique catch types of organisms (over time?) by site?
What are the abiotic differences between each site? (water temp, weather, location, etc)


3. Variables needed for each question

question 1: What is the most caught organism at each site over time?

From the raw data from `fish_02_24` I created a cleaned data set that changed all column names to lower snake case and got rid of any columns with over 750,000 NAs (too many NAs to be a helpful metric to use). From the cleaned dataset, `fish_clean`, I will use the variable `sample_date`, which will give me the time element. I will also use the variable `common_name` (or `iep_fish_code` if I want shorter labels). Lastly, I will use the `location` column to group the catches by site. 

question 2: What is the amount of unique catch types of organisms over time by site?

This question will use the same variables as the last question, `sample_date`, `location`, and `common_name` (or `iep_fish_code`), but used differently. Instead of looking at the "mode" (the most observed organism at each site), we will instead focus on organism type, where the amount of observations doesn't matter. We will simply be looking at the unique names of organisms observed at each site. 

question 3: What are the abiotic differences between each site? 

For this question we will use the `location`, `water_temp`, and `weather_code` from the `fish_clean` dataset. I will also use the `locals` dataset to look at `longitude` and `latitude` in order to compare site locations. I plan to use the lat and long to create a very simple map showing site locations relative to eachother. 


4. Data visualization inspiration 

![plot of wind turbine densities in Canada, but shaped like canada and using the colors of the flag](images/Screenshot_map.png)

Potential idea for displaying abiotic features. I like the idea of using a map of the site or of the bay area in general to show average water temperature, weather, and to also represent location. Would need to play around with how to implement this idea, but could be fun 


![stacked bar plot](images/Screenshot_bar.png)

Possible inspo for max organism caught by site over time. I think a stacked barplot could be cool if I find that the organisms have a little bit of consistency and aren't differing completely each year. I think each site could be on the x axis and time could be on the y. I liked this chart specifically because it showed the information in a both aesthetic and helpful way.

5. Sketch of inforgraphic

![infographic sketch](images/draft_pic1.jpg)
![detailed infographic sketch](images/draft_pic_detailed.jpg)


## Answering: What is the most caught organism at each site over time?

data wrangling
```{r}
unique(fish_clean$location)
class(fish_clean$sample_date)

# Step 1: Calculate the catch count for each common_name
fish_max <- fish_clean |> 
  drop_na(sample_date) |> 
  mutate(sample_date = mdy(sample_date)) |> 
  group_by(location, sample_date, common_name) |> 
  summarize(max_catch = n(), .groups = "drop")

# Step 2: Find the highest catch for each sample_date and location
fish_top <- fish_max |> 
  group_by(location, sample_date) |> 
  summarize(highest_total = max(max_catch), .groups = "drop")

# Step 3: Join the results to get the common_name with the highest catch
fish_result <- fish_max |> 
  inner_join(fish_top, by = c("location", "sample_date", "max_catch" = "highest_total")) |> 
  mutate(max_catch_fam = case_when(
    common_name %in% c("American Shad", "Threadfin Shad", "Pacific Herring") ~ "Clupeidae",
    common_name %in% c("Striped Bass") ~ "Moronidae",
    common_name %in% c("Longfin Smelt", "Delta Smelt", "Wakasagi") ~ "Osmeridae",
    common_name %in% c("Steelhead", "Chinook Salmon") ~ "Salmonidae",
    common_name %in% c("Starry Flounder") ~ "Bothidae",
    common_name %in% c("Golden Shiner", "Common Carp", "Red Shiner", "Sacramento Pikeminnow", "Splittail") ~ "Cyprinidae",
    common_name %in% c("Bluegill", "Redear Sunfish", "Black Crappie", "White Crappie", "Spotted Bass") ~ "Centrarchidae",
    common_name %in% c("Channel Catfish", "White Catfish") ~ "Ictaluridae",
    common_name %in% c("Northern Anchovy") ~ "Engraulidae",
    common_name %in% c("Pacific Lamprey", "River Lamprey") ~ "Petromyzontidae",
    common_name %in% c("Shokihaze Goby", "Shimofuri Goby") ~ "Gobionellidae",
    common_name %in% c("Mississippi Silverside", "Topsmelt") ~ "Atherinopsidae",
    common_name %in% c("Siberian prawn") ~ "Palaemonidae",
    common_name %in% c("Comb jelly", "Estuarine jellyfish", "Crangon sp.", "unid fish", "Bass unknown", "Lamprey unknown", "No catch") ~ "Other",
    TRUE ~ "Other"
  )) 
 # mutate(sample_date = as.Date(sample_date, format = "%m, %d, %y"))
   
fish_result$sample_date = as.Date(fish_result$sample_date, format = "%m, %d, %y") 
```

# set color palette
```{r}
# am going to switch colors in the future, this is just a placeholder
my_palette <- c("red3", "#772d26", "#a85fb4", "#42348b", "#a8734a", "#85d4dc", "#bdcc17", "#92df87",
             "#559e4a", "blue3", "#f7d875", "#bbbfdd", "#808080", "orange2")


```

stacked bar plot 
x = time
y = site
```{r}

ggplot(data = fish_result, aes(x = sample_date, y = location, fill = max_catch_fam)) +
  geom_col() +
   scale_y_discrete(expand = c(0,NA)) +
   # scale_x_date(expand = as.Date(c('2002','2025')),
   #              date_breaks = "1 year",
   #           limits = as.Date(c('2002-01-02', '2024-07-31')),
   #              labels = year
   #           ) +
   scale_fill_manual(values = my_palette) +
  labs(
    title = "Most Caught Organisms by Sample Date",
    subtitle = "Organism is Categorized by Family",
    x = "Sample Date",
    y = "Sample Location"
  ) +
  theme_bw() 
# + facet_wrap(~location)
  # theme(
  # #   axis.text.y = element_blank(),
  # #   axis.ticks.y = element_blank()
  # )
  # 


```

**I am currently troubleshooting this graph (working with Sloane)**

## Answering: What is the amount of unique catch types of organisms by site?

*my plan is to make this look like waves in affinity*

```{r}
fish_unique <- fish_clean |> 
  select(location, common_name, sample_date) |> 
  group_by(location) |> 
  summarize(nunique = n_distinct(common_name)) 

ggplot(data = fish_unique, aes(x = location, y = nunique)) +
  geom_col(color = "blue3", fill = "navy", width = 1) +
  geom_text(aes(label = nunique, 
                vjust = 4), 
            color = "white", 
            size = 5,
            family = "outfit") +
  theme_bw() +
  scale_x_discrete(expand = c(0, NA)) +
  scale_y_continuous(expand = c(0, NA), limits = c(0, 80)) +
  labs(
    title = "Number of Unique Species Caught at Each Location"
  ) +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    # I anticipate changing the style of the title in affinity so I'll leave it for now
    title = element_text(family = "outfit"),
    axis.text = element_text(family = "outfit",
                             size = 12),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    panel.background = element_blank(),
    axis.ticks = element_blank(),
    axis.text.y = element_blank())


```










